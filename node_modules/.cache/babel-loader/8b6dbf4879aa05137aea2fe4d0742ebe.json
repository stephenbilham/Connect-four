{"ast":null,"code":"var _jsxFileName = \"/Users/stephenbilham/Desktop/WebDev/connect-four/src/Board.js\";\nimport React, { useState } from 'react';\nimport Square from \"./Square.js\";\nlet squares = Array(42).fill(0);\nlet player1 = [];\nlet player2 = [];\nlet winningPlayer = 0;\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = column => {\n      console.log(\"weiner2\");\n    };\n\n    this.state = {\n      player1Turn: true,\n      gameOver: false\n    };\n  } //function to find player turn/ print players id in square with onclick\n  // ex. if (player1Turn === true ? return 1 : 2)\n  // IF square id/value? is !0 return (so players cannot click on the piece again) \n  // push the playersTurn into the independent players empty array \n  // if player array contains an array of === possible winning conditons game over \n  //if not keep playing \n  // reset grid to default value whenever \n  //  grid = Array.(42).fill\n  //  player1 = []\n  // player2 = []\n  // make handleclick number 2 \n\n\n  render() {\n    //create a lines for the SQUARES of the grid ex 1px solid, black\n    let grid = squares.map((box, i) => {\n      return React.createElement(Square, {\n        key: i.toString(),\n        id: i,\n        value: box,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, grid));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/stephenbilham/Desktop/WebDev/connect-four/src/Board.js"],"names":["React","useState","Square","squares","Array","fill","player1","player2","winningPlayer","Board","Component","constructor","props","handleClick","column","console","log","state","player1Turn","gameOver","render","grid","map","box","i","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAIC,OAAO,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,CAAf,CAAd;AACA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,aAAa,GAAG,CAApB;;AAEA,MAAMC,KAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAyBhBC,WAzBgB,GAyBDC,MAAD,IAAY;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KA3Be;;AAGf,SAAKC,KAAL,GAAa;AACVC,MAAAA,WAAW,EAAE,IADH;AAEVC,MAAAA,QAAQ,EAAE;AAFA,KAAb;AAIJ,GAR+B,CAS5B;AACA;AAEA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;;;AAKJC,EAAAA,MAAM,GAAE;AAEJ;AAEA,QAAIC,IAAI,GAAGlB,OAAO,CAACmB,GAAR,CAAY,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC9B,aACI,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEA,CAAC,CAACC,QAAF,EAAb;AAA2B,QAAA,EAAE,EAAED,CAA/B;AAAkC,QAAA,KAAK,EAAED,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGJ,KAJU,CAAX;AAMF,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAG,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IADL,CADJ,CADF;AAQD;;AAhD+B;;AAqDpC,eAAeZ,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport Square from \"./Square.js\";\n\nlet squares = Array(42).fill(0);\nlet player1 = [];\nlet player2 = [];\nlet winningPlayer = 0\n\nclass Board extends React.Component {\n    constructor (props) {\n        super(props)\n\n         this.state = {\n            player1Turn: true,\n            gameOver: false\n        }\n    }\n        //function to find player turn/ print players id in square with onclick\n        // ex. if (player1Turn === true ? return 1 : 2)\n\n        // IF square id/value? is !0 return (so players cannot click on the piece again) \n\n        // push the playersTurn into the independent players empty array \n\n        // if player array contains an array of === possible winning conditons game over \n        //if not keep playing \n        \n\n        // reset grid to default value whenever \n        //  grid = Array.(42).fill\n        //  player1 = []\n        // player2 = []\n\n        // make handleclick number 2 \n        handleClick = (column) => { \n            console.log(\"weiner2\")\n        }\n\n    render(){\n\n        //create a lines for the SQUARES of the grid ex 1px solid, black\n\n        let grid = squares.map((box, i) => {\n             return (\n                 <Square key={i.toString()} id={i} value={box}></Square>\n             )\n        })\n        \n      return (\n        <div>\n            <div  className = \"grid\">\n                {grid}\n            </div>   \n        </div>\n       \n      );\n    }\n  }\n  \n  \n\nexport default Board;\n\n"]},"metadata":{},"sourceType":"module"}