{"ast":null,"code":"var _jsxFileName = \"/Users/stephenbilham/Desktop/WebDev/connect-four/src/Board.js\";\nimport React, { useState } from 'react';\nimport Square from \"./Square.js\";\nimport { thisExpression } from '@babel/types';\nlet boxes = Array(42).fill(0);\nlet player1 = [];\nlet player2 = [];\nlet winningPlayer = 0;\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = column => {};\n\n    this.state = {\n      player1Turn: true,\n      gameOver: false\n    };\n  }\n\n  render() {\n    let grid = boxes.map((box, index) => {\n      return React.createElement(Square, {\n        key: index.toString(),\n        id: index,\n        handleClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, grid));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/stephenbilham/Desktop/WebDev/connect-four/src/Board.js"],"names":["React","useState","Square","thisExpression","boxes","Array","fill","player1","player2","winningPlayer","Board","Component","constructor","props","handleClick","column","state","player1Turn","gameOver","render","grid","map","box","index","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,cAAT,QAA+B,cAA/B;AAEA,IAAIC,KAAK,GAAGC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,CAAf,CAAZ;AACA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,aAAa,GAAG,CAApB;;AAGA,MAAMC,KAAN,SAAoBV,KAAK,CAACW,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SASpBC,WAToB,GASLC,MAAD,IAAY,CAEzB,CAXmB;;AAGhB,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,IADJ;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAODC,EAAAA,MAAM,GAAE;AACJ,QAAIC,IAAI,GAAGhB,KAAK,CAACiB,GAAN,CAAU,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACjC,aACI,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAIA,KAAK,CAACC,QAAN,EAAf;AAAiC,QAAA,EAAE,EAAID,KAAvC;AAA8C,QAAA,WAAW,EAAI,KAAKT,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KAJU,CAAX;AAKF,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKM,IADL,CADJ,CADF;AAQD;;AA7B+B;;AAkCpC,eAAeV,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport Square from \"./Square.js\";\nimport { thisExpression } from '@babel/types';\n\nlet boxes = Array(42).fill(0);\nlet player1 = [];\nlet player2 = [];\nlet winningPlayer = 0\n\n\nclass Board extends React.Component {\n    constructor (props) {\n        super(props)\n\n        this.state = {\n            player1Turn: true,\n            gameOver: false\n        }\n    }\n\n    handleClick = (column) => {\n\n    }\n\n\n    render(){\n        let grid = boxes.map((box, index) => {\n            return (\n                <Square key = {index.toString()} id = {index} handleClick = {this.handleClick}/>\n            )\n        })\n      return (\n        <div>\n            <div className = \"grid\">\n                {grid}\n            </div>   \n        </div>\n       \n      );\n    }\n  }\n  \n  \n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}